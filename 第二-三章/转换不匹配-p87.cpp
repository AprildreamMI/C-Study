#include <stdio.h>
#define PAGES 336
#define WORDS 65618
int main(void) {
  short num = PAGES;
  short mnum = -PAGES;

  // 336, 336
  printf("短整型数值和无符号短整型数值为：%hd, %hu\n", num, num);

  /*
      因为short int 取值范围为 -32768 ~ 32767
      系统使用二进制补码的方式来标识有符号整数
      数字 0 ~ 32767 代表他们本身
      其中32768 ~ 65535 代表的是负数
      65535 是-1
      65534 是-2
      所以短整型数字 -336 => 65536 - 336 = 65200
      在带有符号的时候，65200 是 -336
      在不带符号的时候，65200 是 65200
  */
  // -336, 65200
  printf("负数短整型和无符号短整型数为：%hd, %hu\n", mnum, mnum);

  /*
    因为 ASCII码的标识范围为(000 ~ 255)【常用的是000 ~ 127】
    整数num = 336
    超出了表示范围，如果转换成字符的话 336 -255 - 1 = 80
    80 对应的字符为 P
  */
  // 80, P
  printf("整数 %d, 转换成char %c :\n", num, num);


  /*
    因为短整型的范围时-32768 ~ 32767 所以 65618 超出了短整型的最大表示
    也就相当于取65618 的后8位（因为short 是2字节,int 是4字节 1字节一位）
    这样 就用65618 % 65536 取余数为82
  */
  printf("整数 %d, 短整型 %hd, 字符 %c\n", WORDS, WORDS ,WORDS);


  return 0;
}
